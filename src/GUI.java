
import java.awt.Graphics;
import java.awt.Graphics2D;
import static java.sql.Types.NULL;
import java.util.Iterator;
import java.util.concurrent.ConcurrentLinkedDeque;
import javax.swing.JPanel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Zoli
 */
public class GUI extends javax.swing.JFrame {

    static Shop shop;
    private Thread t;
    private static String threadName = "GUI";
    private MyFrame f;

    /**
     * Creates new form GUI
     */
    public GUI() {
        //GUI.threadName = "GUI";

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        StartSim = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        maxSizeText = new javax.swing.JTextField();
        MaxSizeOK = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        MaxQueueText = new javax.swing.JTextField();
        MaxQueueOK = new javax.swing.JButton();
        MaxQueueLabel = new javax.swing.JLabel();
        MaxQueueLabel1 = new javax.swing.JLabel();
        MinArriveText = new javax.swing.JTextField();
        MinArriveOK = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        MaxArriveText = new javax.swing.JTextField();
        MaxArriveOk = new javax.swing.JButton();
        MaxQueueLabel2 = new javax.swing.JLabel();
        SimTimeText = new javax.swing.JTextField();
        SimTimeOk = new javax.swing.JButton();
        DayCombo = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        AvgTimeLabel = new javax.swing.JLabel();
        Stop = new javax.swing.JButton();
        MaxQueueLabel3 = new javax.swing.JLabel();
        SellerSpeedText = new javax.swing.JTextField();
        SpeedOk = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        SimTimeLabel = new javax.swing.JLabel();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Queue Simulator Control Panel");

        StartSim.setText("Start");
        StartSim.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                StartSimMouseClicked(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/qsim.png"))); // NOI18N

        MaxSizeOK.setText("OK");
        MaxSizeOK.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MaxSizeOKMouseClicked(evt);
            }
        });

        jLabel2.setText("Shopping Cart Maximum Size:");

        MaxQueueOK.setText("OK");
        MaxQueueOK.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MaxQueueOKMouseClicked(evt);
            }
        });

        MaxQueueLabel.setText("Number of  queues:");

        MaxQueueLabel1.setText("Maximum Arriving Time:");

        MinArriveOK.setText("OK");
        MinArriveOK.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MinArriveOKMouseClicked(evt);
            }
        });

        jLabel3.setText("Minimum Arriving Time:");

        MaxArriveOk.setText("OK");
        MaxArriveOk.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MaxArriveOkMouseClicked(evt);
            }
        });

        MaxQueueLabel2.setText("Simulation Time:");

        SimTimeOk.setText("OK");
        SimTimeOk.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SimTimeOkMouseClicked(evt);
            }
        });

        DayCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Morning", "Afternoon", "Evening", "Night" }));
        DayCombo.setSelectedIndex(1);
        DayCombo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DayComboMouseClicked(evt);
            }
        });

        jLabel4.setText("Simulation Time of Day:");

        AvgTimeLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        Stop.setText("Stop");
        Stop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                StopMouseClicked(evt);
            }
        });

        MaxQueueLabel3.setText("Sellers Speed:");

        SpeedOk.setText("OK");
        SpeedOk.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SpeedOkMouseClicked(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Average Waiting time:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Simulation Time remains:");

        SimTimeLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SimTimeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(34, 34, 34)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(10, 10, 10)
                                    .addComponent(StartSim, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(Stop, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jLabel5)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(AvgTimeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(MaxQueueLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(MaxQueueLabel)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(MaxQueueText, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(MaxQueueOK, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(MinArriveText, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(MinArriveOK, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(SimTimeText, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(MaxArriveText, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(SellerSpeedText, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(DayCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(MaxArriveOk, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(SimTimeOk, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(SpeedOk, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(maxSizeText, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(MaxSizeOK, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(MaxQueueLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(MaxQueueLabel1)
                            .addComponent(jLabel4))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(maxSizeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MaxSizeOK))
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(MaxQueueText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(MaxQueueOK))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(MinArriveOK)
                                    .addComponent(MinArriveText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(MaxQueueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(MaxArriveText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MaxArriveOk)
                            .addComponent(MaxQueueLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(MaxQueueLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SimTimeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SimTimeOk))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SellerSpeedText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SpeedOk)
                            .addComponent(MaxQueueLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(DayCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(46, 46, 46))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(StartSim)
                            .addComponent(Stop))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(AvgTimeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE)
                            .addComponent(SimTimeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void StartSimMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StartSimMouseClicked
        int i;
        shop = new Shop(Shop.max_queues);
        Shop.dispose = 0;
        f = new MyFrame("Shop", shop.getQueues());
        f.start();
        shop.initQueues(shop.max_queues);
        for (i = 0; i < shop.max_queues; i++) {
            shop.getQueues().get(i).start();
        }
        CheckQueue check = new CheckQueue(shop.getQueues(), "Check");

        AddTask provider = new AddTask(shop.getQueues(), Shop.max_size, Shop.min_size, Shop.max_queues, "Provider thread");
        provider.start();
        check.start();

    }//GEN-LAST:event_StartSimMouseClicked

    private void DayComboMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DayComboMouseClicked
        int selected = this.DayCombo.getSelectedIndex();

        switch (selected) {
            case 0:
                Shop.time_of_day = 2;
                break;
            case 1:
                Shop.time_of_day = 1;
                break;
            case 2:
                Shop.time_of_day = 2;
                break;
            case 3:
                Shop.time_of_day = 3;
                break;
            default:
                Shop.time_of_day = 1;
                break;
        }
    }//GEN-LAST:event_DayComboMouseClicked

    private void MaxQueueOKMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MaxQueueOKMouseClicked
        try {
            Shop.max_queues = Integer.parseInt(this.MaxQueueText.getText());
            AddTask.max_queue = Integer.parseInt(this.MaxQueueText.getText());
        } catch (NumberFormatException e) {
            Shop.max_queues = 3;
            AddTask.max_queue = 3;
        }
        this.MaxQueueText.setText("");
    }//GEN-LAST:event_MaxQueueOKMouseClicked

    private void MaxSizeOKMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MaxSizeOKMouseClicked
        try {
            Shop.max_size = Integer.parseInt(this.maxSizeText.getText());
        } catch (NumberFormatException e) {
            Shop.max_size = 3;
        }
        this.maxSizeText.setText("");
    }//GEN-LAST:event_MaxSizeOKMouseClicked

    private void MinArriveOKMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MinArriveOKMouseClicked
        try {
            Shop.min_apperance_time = Integer.parseInt(this.MinArriveText.getText());
        } catch (NumberFormatException e) {
            Shop.min_apperance_time = 3;
        }
        this.MinArriveText.setText("");
    }//GEN-LAST:event_MinArriveOKMouseClicked

    private void MaxArriveOkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MaxArriveOkMouseClicked
        try {
            Shop.apperance_time = Integer.parseInt(this.MaxArriveText.getText());
        } catch (NumberFormatException e) {
            Shop.apperance_time = 3;
        }
        this.MaxArriveText.setText("");
    }//GEN-LAST:event_MaxArriveOkMouseClicked

    private void SimTimeOkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SimTimeOkMouseClicked
        try {
            Shop.simulation_time = Integer.parseInt(this.SimTimeText.getText())*100;
        } catch (NumberFormatException e) {
            Shop.simulation_time = 60000 * 10;
        }
        this.SimTimeText.setText("");
    }//GEN-LAST:event_SimTimeOkMouseClicked

    private void StopMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StopMouseClicked
        this.f.setVisible(false);
        Shop.dispose = 1;
        
    }//GEN-LAST:event_StopMouseClicked

    private void SpeedOkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SpeedOkMouseClicked
        try {
            Shop.sellerSpeed = Integer.parseInt(this.SellerSpeedText.getText());
        } catch (NumberFormatException e) {
            Shop.sellerSpeed = 10;
        }
        this.SellerSpeedText.setText("");
    }//GEN-LAST:event_SpeedOkMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                new GUI().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JLabel AvgTimeLabel;
    private javax.swing.JComboBox DayCombo;
    private javax.swing.JButton MaxArriveOk;
    private javax.swing.JTextField MaxArriveText;
    private javax.swing.JLabel MaxQueueLabel;
    private javax.swing.JLabel MaxQueueLabel1;
    private javax.swing.JLabel MaxQueueLabel2;
    private javax.swing.JLabel MaxQueueLabel3;
    private javax.swing.JButton MaxQueueOK;
    private javax.swing.JTextField MaxQueueText;
    private javax.swing.JButton MaxSizeOK;
    private javax.swing.JButton MinArriveOK;
    private javax.swing.JTextField MinArriveText;
    private javax.swing.JTextField SellerSpeedText;
    public static javax.swing.JLabel SimTimeLabel;
    private javax.swing.JButton SimTimeOk;
    private javax.swing.JTextField SimTimeText;
    private javax.swing.JButton SpeedOk;
    private javax.swing.JButton StartSim;
    private javax.swing.JButton Stop;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField maxSizeText;
    // End of variables declaration//GEN-END:variables

    /* @Override
     public void run() {
     //shop.initQueues(shop.max_queues);
     while (Shop.simulation_time>0)
     {
                    
     Shop.simulation_time--;
     }
     }
    
     public void start ()
     {
     System.out.println("Starting " +  threadName );
     if (t == null)
     {
     t = new Thread (this, threadName);
     t.start ();
     }
     }
     */
}
